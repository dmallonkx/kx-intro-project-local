# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  annaAWStest

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

Globals:

  Function:
    Timeout: 300
    Runtime: nodejs12.x


# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: hello-from-lambda.js
  BookingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bookTable
        AttributeDefinitions:
          - AttributeName: partKey
            AttributeType: S
        KeySchema:
          - AttributeName: partKey
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

  BoardHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: Test
      CorsConfiguration: True

  PostMessageFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: src/handlers/postMessage.handler
        Runtime: nodejs12.x
        MemorySize: 128
        Timeout: 300
        Events:
          PostMessage:
            Type: HttpApi
            Properties:
              ApiId: !Ref BoardHttpApi
              Method: POST
              Path: /messages
        Policies:
          - AmazonDynamoDBFullAccess

  GetMessagesFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: src/handlers/getMessages.handler
        Runtime: nodejs12.x
        MemorySize: 128
        Timeout: 300
        Events:
          GetMessages:
            Type: HttpApi
            Properties:
              ApiId: !Ref BoardHttpApi
              Method: GET
              Path: /messages
        Policies:
          - AmazonDynamoDBFullAccess

  LambdaErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Sum
  LambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Lambda errors
      AlarmName: LambdaErrorsAlarm
      ComparisonOperator: LessThanLowerOrGreaterThanUpperThreshold
      EvaluationPeriods: 1
      Metrics:
      - Expression: ANOMALY_DETECTION_BAND(m1, 2)
        Id: ad1
      - Id: m1
        MetricStat:
          Metric:
            MetricName: Errors
            Namespace: AWS/Lambda
          Period: !!int 86400
          Stat: Sum
      ThresholdMetricId: ad1
      TreatMissingData: breaching


